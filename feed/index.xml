<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>Kami的Blog</title><link>/</link><description>能吃是福</description><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://cdn.jsdelivr.net/gh/PuppyGummy/PuppyGummy.github.io@gh-pages/icon.png</url><title>Kami的Blog</title><link>/</link></image><language>zh-CN</language><lastBuildDate>Fri, 27 Nov 2020 12:57:40 +0806</lastBuildDate><pubDate>Fri, 27 Nov 2020 12:57:40 +0806</pubDate><item><title>Hello World!</title><link>/archives/typography/</link><description>&lt;div class="notice"&gt;这是一篇示例文章，在这里你可以看到常用页面元素的显示效果，同时也是 Markdown 语法的参考文章。保留或者删除本文，开始自己的创作吧！&lt;/div&gt;&lt;h2&gt;L2 Heading&lt;/h2&gt;
&lt;h3&gt;L3 Heading&lt;/h3&gt;
&lt;h4&gt;L4 Heading&lt;/h4&gt;
&lt;h5&gt;L5 Heading&lt;/h5&gt;
&lt;h6&gt;L6 Heading&lt;/h6&gt;
&lt;h2&gt;Paragraph&lt;/h2&gt;
&lt;p&gt;We are creating a world that all may enter without privilege or prejudice accorded by race, economic power, military force, or station of birth.&lt;/p&gt;
&lt;p&gt;We are creating a world where anyone, anywhere may express his or her beliefs, no matter how singular, without fear of being coerced into silence or conformity.&lt;/p&gt;
&lt;h2&gt;Inline elements&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Bold&lt;/strong&gt;, &lt;ruby&gt;Ruby&lt;rp&gt;(&lt;/rp&gt;&lt;rt&gt;ルビ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;, &lt;em&gt;Italic&lt;/em&gt;, &lt;del&gt;Strikethrough&lt;/del&gt;, &lt;a href="https://www.imalan.cn"&gt;Link&lt;/a&gt;&lt;sup id="fn_ref_1"&gt;&lt;a href="#fn_1"&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;h2&gt;Blockquote and nested blockquote&lt;/h2&gt;
&lt;blockquote&gt;&lt;p&gt;安得广厦千万间，大庇天下寒士俱欢颜！风雨不动安如山。&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;呜呼！何时眼前突兀见此屋，吾庐独破受冻死亦足！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Code&lt;/h2&gt;
&lt;p&gt;Inline code: &lt;code&gt;int a=1;&lt;/code&gt;. Code block:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt; &lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Hello World!&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;List&lt;/h2&gt;
&lt;h3&gt;Unordered List&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;iPhone&lt;ul&gt;
&lt;li&gt;iPhone X&lt;/li&gt;
&lt;li&gt;iPhone 11&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;iPad&lt;/li&gt;
&lt;li&gt;MacBook&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Ordered List&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;打开冰箱&lt;ol&gt;
&lt;li&gt;右手放在冰箱门拉手上&lt;/li&gt;
&lt;li&gt;左手扶住冰箱主体&lt;/li&gt;
&lt;li&gt;右手向后用力&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;把大象放进冰箱&lt;/li&gt;
&lt;li&gt;关上冰箱&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Horizontal rule&lt;/h2&gt;
&lt;hr&gt;
&lt;h2&gt;Math&lt;/h2&gt;
&lt;p&gt;Inline Math: $m\times n$, math block:&lt;/p&gt;
&lt;p&gt;$$C_{m\times k}=A_{m\times n}\cdot B_{n\times k}$$&lt;/p&gt;
&lt;h2&gt;Figures&lt;/h2&gt;
&lt;h3&gt;Single figure&lt;/h3&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="836" data-height="450" src="https://cdn.jsdelivr.net/gh/PuppyGummy/PuppyGummy.github.io@gh-pages/archives/assets/e0affbc80ccb2d596c87b520e37e7071.jpg" alt="Princess Mononoke" /&gt;&lt;figcaption&gt;Princess Mononoke&lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;Photoset&lt;/h3&gt;
&lt;div class="photos"&gt;
&lt;figure&gt;&lt;img data-width="4032" data-height="2688" src="https://cdn.jsdelivr.net/gh/PuppyGummy/PuppyGummy.github.io@gh-pages/archives/assets/4956a144888cdbbb6c2df1d1d15384b0.jpeg" alt="" /&gt;&lt;/figure&gt;
&lt;figure&gt;&lt;img data-width="2690" data-height="2688" src="https://cdn.jsdelivr.net/gh/PuppyGummy/PuppyGummy.github.io@gh-pages/archives/assets/4c66f0da616b08325b3aaa4c8b3f68e1.jpg" alt="" /&gt;&lt;/figure&gt;
&lt;figure&gt;&lt;img data-width="4032" data-height="2688" src="https://cdn.jsdelivr.net/gh/PuppyGummy/PuppyGummy.github.io@gh-pages/archives/assets/8b4d2334469ffa39b59e6fdb37c8c601.jpeg" alt="" /&gt;&lt;/figure&gt;&lt;/div&gt;&lt;div class="photos"&gt;
&lt;figure&gt;&lt;img data-width="4032" data-height="2688" src="https://cdn.jsdelivr.net/gh/PuppyGummy/PuppyGummy.github.io@gh-pages/archives/assets/0f5023d542a33e7c9d270f3cd6a99562.jpeg" alt="" /&gt;&lt;/figure&gt;
&lt;figure&gt;&lt;img data-width="4032" data-height="2688" src="https://cdn.jsdelivr.net/gh/PuppyGummy/PuppyGummy.github.io@gh-pages/archives/assets/20ec69d2a0276336f95e11f42866d17f.jpeg" alt="" /&gt;&lt;/figure&gt;
&lt;figure&gt;&lt;img data-width="4032" data-height="2688" src="https://cdn.jsdelivr.net/gh/PuppyGummy/PuppyGummy.github.io@gh-pages/archives/assets/2b8af25285e5a193729a350593113bad.jpeg" alt="" /&gt;&lt;/figure&gt;&lt;/div&gt;&lt;h2&gt;Table&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;&lt;tr&gt;
&lt;th&gt;header&lt;/th&gt;
&lt;th&gt;header&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;cell 1&lt;/td&gt;
&lt;td&gt;cell 2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cell 3&lt;/td&gt;
&lt;td&gt;cell 4&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;Link Card&lt;/h2&gt;
&lt;div class="links"&gt;
&lt;a style="display:block" target="_blank" href="https://www.imalan.cn" class="board-item"&gt;                 &lt;div class="board-thumb"&gt;&lt;img src="https://secure.gravatar.com/avatar/1741a6eef5c824899e347e4afcbaa75d?s=200&amp;r=G&amp;d="&gt;&lt;/div&gt;                 &lt;div class="board-title"&gt;AlanDecode&lt;/div&gt;&lt;/a&gt;&lt;/div&gt;&lt;hr&gt;&lt;div class="footnotes"&gt;&lt;ol&gt;&lt;li id="fn_1"&gt;Home page for AlanDecode &lt;a no-style href="#fn_ref_1"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;</description><author>815918091@qq.com (AlanDecode)</author><guid isPermaLink="true">/archives/typography/</guid><pubDate>Wed, 18 Dec 2019 16:50:00 +0806</pubDate></item><item><title>C++实现算术表达式的语法编译程序</title><link>/archives/grammar-parser-implementation/</link><description>&lt;p&gt;本文的前提：&lt;/p&gt;
&lt;p&gt;编写语法分析程序，实现对算术表达式的语法分析。要求所分析算数表达式由如下的文法产生&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;E-&amp;gt;E+T | E-T | T&lt;/p&gt;
&lt;p&gt;T-&amp;gt;T*F | T/F | F&lt;/p&gt;
&lt;p&gt;F-&amp;gt; (E) | num&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;实验要求：在对输人的算术表达式进行分析的过程中，依次输出所采用的产生式&lt;/p&gt;
&lt;p&gt;编写算法分析程序实现自底向上的分析，要求如下&lt;/p&gt;
&lt;p&gt;(1)构造识别该文法所有活前缀的DFA&lt;/p&gt;
&lt;p&gt;(2)构造该文法的LR分析表&lt;/p&gt;
&lt;p&gt;(3)编程实现算法4.3，构造LR分析程序&lt;/p&gt;
&lt;h2&gt;分析&lt;/h2&gt;
&lt;p&gt;首先，对于给出的文法，写出其拓广文法：&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;(0) E'-&amp;gt;E&lt;/p&gt;
&lt;p&gt;(1) E-&amp;gt;E+T&lt;/p&gt;
&lt;p&gt;(2) E-&amp;gt;E-T&lt;/p&gt;
&lt;p&gt;(3) E-&amp;gt;T&lt;/p&gt;
&lt;p&gt;(4) T-&amp;gt;T*F&lt;/p&gt;
&lt;p&gt;(5) T-&amp;gt;T/F&lt;/p&gt;
&lt;p&gt;(6) T-&amp;gt;F&lt;/p&gt;
&lt;p&gt;(7) F-&amp;gt; (E)&lt;/p&gt;
&lt;p&gt;(8) F-&amp;gt;num&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;构造如下的识别该文法所有活前缀的DFA：&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="993" data-height="920" src="https://cdn.jsdelivr.net/gh/PuppyGummy/PuppyGummy.github.io@gh-pages/archives/assets/60aaf8a7e4a5a4c832fae0abe9cb57af.png" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;同时写出相应的FOLLOW集：&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;follow(E') = { $ }&lt;/p&gt;
&lt;p&gt;follow(E) = { +, -, ), $ }&lt;/p&gt;
&lt;p&gt;follow(T) = follow(F) = { *, /, +, -, ), $ }&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;然后，根据构造的DFA和FOLLOW集，可以填出对应的LR分析表：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;&lt;tr&gt;
&lt;th&gt;--&lt;/th&gt;
&lt;th&gt;+&lt;/th&gt;
&lt;th&gt;-&lt;/th&gt;
&lt;th&gt;*&lt;/th&gt;
&lt;th&gt;/&lt;/th&gt;
&lt;th&gt;(&lt;/th&gt;
&lt;th&gt;)&lt;/th&gt;
&lt;th&gt;num&lt;/th&gt;
&lt;th&gt;$&lt;/th&gt;
&lt;th&gt;E&lt;/th&gt;
&lt;th&gt;T&lt;/th&gt;
&lt;th&gt;F&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;s4&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;s5&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;s6&lt;/td&gt;
&lt;td&gt;s7&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;acc&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;r3&lt;/td&gt;
&lt;td&gt;r3&lt;/td&gt;
&lt;td&gt;s8&lt;/td&gt;
&lt;td&gt;s9&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;r3&lt;/td&gt;
&lt;td&gt;r3&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;r6&lt;/td&gt;
&lt;td&gt;r6&lt;/td&gt;
&lt;td&gt;r6&lt;/td&gt;
&lt;td&gt;r6&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;r6&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;r6&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;s4&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;s5&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;r8&lt;/td&gt;
&lt;td&gt;r8&lt;/td&gt;
&lt;td&gt;r8&lt;/td&gt;
&lt;td&gt;r8&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;r8&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;r8&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;s4&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;s5&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;s4&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;s5&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;s4&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;s5&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;s4&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;s5&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;s6&lt;/td&gt;
&lt;td&gt;s7&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;s15&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;r1&lt;/td&gt;
&lt;td&gt;r1&lt;/td&gt;
&lt;td&gt;s8&lt;/td&gt;
&lt;td&gt;s9&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;r1&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;r1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;r2&lt;/td&gt;
&lt;td&gt;r2&lt;/td&gt;
&lt;td&gt;s8&lt;/td&gt;
&lt;td&gt;s9&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;r2&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;r2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;r4&lt;/td&gt;
&lt;td&gt;r4&lt;/td&gt;
&lt;td&gt;r4&lt;/td&gt;
&lt;td&gt;r4&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;r4&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;r4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;r5&lt;/td&gt;
&lt;td&gt;r5&lt;/td&gt;
&lt;td&gt;r5&lt;/td&gt;
&lt;td&gt;r5&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;r5&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;r5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;r7&lt;/td&gt;
&lt;td&gt;r7&lt;/td&gt;
&lt;td&gt;r7&lt;/td&gt;
&lt;td&gt;r7&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;r7&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;r7&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="864" data-height="318" src="https://cdn.jsdelivr.net/gh/PuppyGummy/PuppyGummy.github.io@gh-pages/archives/assets/75f539883a2e0607274876bc10c6d024.png" alt="LR分析表" /&gt;&lt;figcaption&gt;LR分析表&lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;最后实现算法4.3，其伪代码如下：&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;输入：文法G的一张分析表和一个输入符号串ω&lt;/p&gt;
&lt;p&gt;输出：若ω∈L(G)，得到ω的自底向上的分析，否则报错&lt;/p&gt;
&lt;p&gt;方法：开始时，初始状态S0在栈顶，ω$在输入缓冲器中&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;置ip指向ω$的第一个符号；

repeat  forever   begin

令S是栈顶状态，a是ip所指向的符号；

if action[S，a]=shift S’  then  begin

    把a和S’依次入栈；

    推进ip，使它指向下一个输入符号

    end

else if action[S，a]=reduce by A→β  then  begin

    从栈顶弹出2*|β|个符号；

    令S’是现在的栈顶状态，把A和goto[S’，A]入栈；

    输出产生式A→β

    end

else if action[S，a]=accept  then  return

else  error()

end.&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;
</description><author>815918091@qq.com (卡咪)</author><guid isPermaLink="true">/archives/grammar-parser-implementation/</guid><pubDate>Fri, 27 Nov 2020 20:34:00 +0806</pubDate></item></channel></rss>